{"version":3,"sources":["Project.js","App.js","reportWebVitals.js","index.js"],"names":["Project","name","description","image","href","source","className","alt","src","process","style","padding","target","rel","App","React","useState","w","window","innerWidth","h","innerHeight","canvasSize","setCanvasSize","canvasRef","useRef","useLayoutEffect","handleResize","size","current","getBoundingClientRect","width","height","addEventListener","removeEventListener","inGame","setInGame","useEffect","event","console","log","key","AsteroidsNS","play","end","overlayClasses","push","ref","join","icon","faGithubSquare","faLinkedin","faEnvelopeSquare","onClick","cursor","position","bottom","right","paddingRight","visibility","projects","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b16be3fb.chunk.js","sourcesContent":["\nimport ReactMarkdown from 'react-markdown'\n\nconst Project = ({ name, description, image, href, source }) => {\n\n  if (image === \"\")\n  {\n    image = 'noimage.png'\n  }\n\n  return (\n    <div className=\"project\">\n      <div className=\"image-container\">\n        <img className=\"image\" alt={name} src={process.env.PUBLIC_URL + '/' + image} />\n      </div>\n      <div className=\"details\">\n        <div style={{padding: \"0.25em\"}}>\n          <h4>{name}</h4>\n          <ReactMarkdown>{description}</ReactMarkdown>\n          <div>\n            <span>{href ? (<a href={href} target=\"_blank\" rel=\"noreferrer\" >Visit</a>) : null }</span>\n            <span>{source ? (<a href={source} target=\"_blank\" rel=\"noreferrer\" >Source</a>) : null }</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Project","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons'\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport Project from './Project'\nimport projects from './projects.json'\nimport './App.css'\n\nfunction App() {\n  const [ canvasSize, setCanvasSize ] = React.useState({ w: window.innerWidth, h: window.innerHeight })\n  const canvasRef = React.useRef(null)\n  React.useLayoutEffect(() => {\n    const handleResize = () => {\n      const size = canvasRef.current.getBoundingClientRect()\n      // const ratio = window.devicePixelRatio || 1\n\n      setCanvasSize({\n        width: size.width,\n        height: size.height\n      })\n\n      // canvasRef.current.getContext('2d').scale(ratio, ratio)\n    }\n\n    window.addEventListener('resize', handleResize)\n    handleResize()\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [ setCanvasSize ])\n\n  const [inGame, setInGame] = React.useState(false)\n\n  const onPlayAsteroidsClick = () => {\n    setInGame(true)\n  }\n\n  const onEndAsteroidsClick = () => {\n    setInGame(false)\n  }\n\n  React.useEffect(() => {\n    window.addEventListener(\"keyup\", (event) => {\n      console.log(event.key)\n      if (event.key === 'Escape')\n      {\n        setInGame(false)\n      }\n    })\n  })\n\n  React.useEffect(() => {\n    if (inGame)\n    {\n      window.AsteroidsNS?.play()\n    }\n    else\n    {\n      window.AsteroidsNS?.end()\n    }\n  }, [inGame])\n\n  const overlayClasses = [\"game-overlay\"]\n  if (inGame)\n  {\n    overlayClasses.push(\"fade-out\")\n  }\n\n  return (\n    <div className=\"App\">\n      <section className=\"app-header\">\n        <div className=\"asteroids\">\n          <canvas ref={canvasRef} width={canvasSize.width} height={canvasSize.height}></canvas>\n        </div>\n        <section className={overlayClasses.join(\" \")}>\n          <div className=\"spacer\"></div>\n          <h1>Hello, I'm <span className=\"name-highlight\">Andrew Cockayne</span>, a full-stack developer.</h1>\n          <p>\n            <a href=\"https://github.com/immortalnights\" target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithubSquare} /> GitHub</a>\n            <a href=\"https://www.linkedin.com/in/andrew-cockayne/\" target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faLinkedin} /> LinkedIn</a>\n            <a href=\"mailto:a.cockayne@gmail.com\" target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faEnvelopeSquare} /> Email</a>\n          </p>\n          <div className=\"spacer\"></div>\n          <p className=\"footnote\">\n            <span onClick={onPlayAsteroidsClick} style={{cursor: \"pointer\"}}>Click to play</span>\n            <br />(Asteroids game is work in progress)\n          </p>\n        </section>\n        <div style={{ position: 'absolute', bottom: 0, right: 0, paddingRight: 20, visibility: inGame ? \"visible\" : \"hidden\" }}>\n          <p className=\"footnote\">\n            <span onClick={onEndAsteroidsClick} style={{cursor: \"pointer\"}}>Press 'ESC' to end</span>\n          </p>\n        </div>\n      </section>\n      <section>\n        <p>I have over ten years' experience working at an industry leading technology company. During that time I have worked on a distributed backend system for data protection using <em>C++</em>. I am currently team leader for the UI/UX team for the application front-end, written in <em>JavaScript</em>.</p>\n        <p>I have excellent knowledge in <em>Python</em> which I utilize for application automation and API integration, alongside <em>Continuous Integration</em> tools such as Jenkins and Docker.</p>\n      </section>\n      <section>\n        <p>My other interests include running, swimming, gaming and films.</p>\n      </section>\n      <section>\n        {projects.map((item, index) => <Project key={index} {...item} />)}\n      </section>\n      <footer>\n        Andrew Cockayne &copy; 2022\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}